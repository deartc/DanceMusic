-Group 2 Used i use the following one to satisfy requiremnts:

I used the write a DML statement that UPDATEs a set of rows with a WHERE clause. The values used in the WHERE clause should be a variable.

UPDATE album SET release_country = 'United States' WHERE release_country= 'Great Britain';


-Group 3: Optimizing a Database

I included the following third feature: Design a NONCLUSTERED INDEX with ONE KEY COLUMN that improves the performance of one of the above queries.

UPDATE music AS m SET albumID = (SELECT albumID FROM albumList AS a WHERE m.songalbum = a.album) WHERE albumID IS NULL AND EXISTS (SELECT 1 FROM albumList AS a WHERE m.songalbum = a.album) ;



  
  create procedure add_album (AlbumID int, AlbumName char(100), BandName char(100), BandID int, NumberOfSongs int, Genre char(100)) 
BEGIN
INSERT INTO ARTIST (AlbumID, AlbumName, BandName, BandID, NumberOfSongs, Genre) VALUES(
 AlbumID, AlbumName, BandName, BandID, NumberOfSongs, Genre);  
END

create procedure add_songs (SongID int, SongName char(100), AlbumID int, AlbumName char(100), BandID int, BandName char(100), Lyrical_Themes char(100), GuestArtistschar(100)) 
BEGIN
INSERT INTO ARTIST (SongID, SongName, AlbumID, AlbumName, BandID, BandName, Lyrical_Themes, GuestArtists) VALUES(
 SongID, SongName, AlbumID, AlbumName, BandID, BandName, Lyrical_Themes, GuestArtists);  
END


GO

EXECUTE add_album
GO

  
  END;








